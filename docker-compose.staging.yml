version: "3.8"

services:
  nginx:
    #restart: unless-stopped
    container_name: staging_nginx
    build:
      context: .
      dockerfile: /docker/nginx/staging/Dockerfile
    ports:
      - 8080:8080
    volumes: #share these volumes with the backend and frontend
      - static_volume:/app/django_static
      - frontend_static_volume:/app/frontend/build/static
      - frontend_assets_volume:/app/frontend/public
    depends_on:
      - frontend
      - backend

  frontend:
    #restart: unless-stopped
    container_name: staging_frontend
    build:
      context: .
      dockerfile: /docker/frontend/staging/Dockerfile
    env_file:
      - ./.env.staging
    entrypoint:
      - /app/frontend/entrypoint.sh
    volumes:
      - frontend_static_volume:/app/frontend/build/static
      - frontend_assets_volume:/app/frontend/public
    expose:
      - 3000:3000
    depends_on:
      - backend

  backend:
    #restart: unless-stopped
    container_name: staging_backend
    build:
      context: .
      dockerfile: /docker/backend/staging/Dockerfile
    env_file:
      - ./.env.staging
    entrypoint:
      - /app/backend/entrypoint.sh
    volumes:
      - static_volume:/app/django_static
    expose:
      - 8000:8000
    depends_on:
      - db

  db:
    image: postgres:13
    container_name: staging_db
    #port:
    expose:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${SQL_DATABASE}

volumes:
  frontend_static_volume:
  frontend_assets_volume:
  static_volume:
  postgres_data:
